{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juajxavier/upme/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport challenges from \"../../challenges.json\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrenceExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  var percentToNextLevel = Math.round(currentExperience * 100) / experienceToNextLevel;\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length); //para disparar desafios aleatoriamente.\n\n    var challenge = challenges[randomChallengeIndex]; // challenge vai disparar a função random utilizando os dados do json challenges.\n\n    setActiveChallenge(challenge);\n\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Novo desafio!\", {\n        body: \"Valendo \".concat(challenge.amount, \"xp\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience > experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrenceExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      experienceToNextLevel: experienceToNextLevel,\n      percentToNextLevel: percentToNextLevel,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"n6NNlbVNUJZIGL7uKZkxqskf3x0=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/juajxavier/upme/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrenceExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","percentToNextLevel","round","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Notification","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAA8D,OAA9D;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AAyBA,OAAO,IAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASI,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC9CJ,QAAQ,CAAC,CAAD,CADsC;AAAA,MACjEK,KADiE;AAAA,MAC1DC,QAD0D;;AAAA,mBAErBN,QAAQ,CAAC,CAAD,CAFa;AAAA,MAEjEO,iBAFiE;AAAA,MAE9CC,qBAF8C;;AAAA,mBAGlBR,QAAQ,CAAC,CAAD,CAHU;AAAA,MAGjES,mBAHiE;AAAA,MAG5CC,sBAH4C;;AAAA,mBAK1BV,QAAQ,CAAC,IAAD,CALkB;AAAA,MAKjEW,eALiE;AAAA,MAKhDC,kBALgD;;AAOxE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEA,MAAMW,kBAAkB,GACtBF,IAAI,CAACG,KAAL,CAAWV,iBAAiB,GAAG,GAA/B,IAAsCM,qBADxC;;AAGA,WAASK,OAAT,GAAmB;AACjBZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASc,iBAAT,GAA6B;AAC3B,QAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B,CAD2B,CACiD;;AAC5E,QAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B,CAF2B,CAEyB;;AAEpDR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;;AAEA,QAAIC,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C;AACzC,UAAID,YAAJ,CAAiB,eAAjB,EAAkC;AAChCE,QAAAA,IAAI,oBAAaH,SAAS,CAACI,MAAvB;AAD4B,OAAlC;AAGD;AACF;;AAED,WAASC,cAAT,GAA0B;AACxBjB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,WAASkB,iBAAT,GAA6B;AAC3B,QAAI,CAACnB,eAAL,EAAsB;AACpB;AACD;;AAH0B,QAKnBiB,MALmB,GAKRjB,eALQ,CAKnBiB,MALmB;AAO3B,QAAIG,eAAe,GAAGxB,iBAAiB,GAAGqB,MAA1C;;AAEA,QAAIG,eAAe,GAAGlB,qBAAtB,EAA6C;AAC3CkB,MAAAA,eAAe,GAAGA,eAAe,GAAGlB,qBAApC;AACAK,MAAAA,OAAO;AACR;;AAEDV,IAAAA,qBAAqB,CAACuB,eAAD,CAArB;AACAnB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,KAAK,EAALA,KADK;AAELE,MAAAA,iBAAiB,EAAjBA,iBAFK;AAGLE,MAAAA,mBAAmB,EAAnBA,mBAHK;AAILI,MAAAA,qBAAqB,EAArBA,qBAJK;AAKLG,MAAAA,kBAAkB,EAAlBA,kBALK;AAMLE,MAAAA,OAAO,EAAPA,OANK;AAOLC,MAAAA,iBAAiB,EAAjBA,iBAPK;AAQLR,MAAAA,eAAe,EAAfA,eARK;AASLkB,MAAAA,cAAc,EAAdA,cATK;AAULC,MAAAA,iBAAiB,EAAjBA;AAVK,KADT;AAAA,cAcG1B;AAdH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAtEeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from \"react\";\n\nimport challenges from \"../../challenges.json\";\n\ninterface Challenge {\n  type: \"body\" | \"eye\";\n  description: string;\n  amount: number;\n}\n\ninterface ChallengesContextData {\n  level: number;\n  currentExperience: number;\n  challengesCompleted: number;\n  experienceToNextLevel: number;\n  percentToNextLevel: number;\n  activeChallenge: Challenge;\n  levelUp: () => void;\n  startNewChallenge: () => void;\n  resetChallenge: () => void;\n  completeChallenge: () => void;\n}\n\ninterface ChallengesProviderProps {\n  children: ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n  const [level, setLevel] = useState(1);\n  const [currentExperience, setCurrenceExperience] = useState(0);\n  const [challengesCompleted, setChallengesCompleted] = useState(0);\n\n  const [activeChallenge, setActiveChallenge] = useState(null);\n\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  const percentToNextLevel =\n    Math.round(currentExperience * 100) / experienceToNextLevel;\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length); //para disparar desafios aleatoriamente.\n    const challenge = challenges[randomChallengeIndex]; // challenge vai disparar a função random utilizando os dados do json challenges.\n\n    setActiveChallenge(challenge);\n\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Novo desafio!\", {\n        body: `Valendo ${challenge.amount}xp`,\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const { amount } = activeChallenge;\n\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience > experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrenceExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return (\n    <ChallengesContext.Provider\n      value={{\n        level,\n        currentExperience,\n        challengesCompleted,\n        experienceToNextLevel,\n        percentToNextLevel,\n        levelUp,\n        startNewChallenge,\n        activeChallenge,\n        resetChallenge,\n        completeChallenge,\n      }}\n    >\n      {children}\n    </ChallengesContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}