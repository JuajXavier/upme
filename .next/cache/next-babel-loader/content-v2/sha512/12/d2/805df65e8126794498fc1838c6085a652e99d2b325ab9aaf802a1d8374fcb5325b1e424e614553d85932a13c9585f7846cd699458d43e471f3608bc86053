{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/juajxavier/upme/src/components/Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout; // variável global do js\n\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60); // 25 * 60 pra passar 25 minutos pra segundos.\n\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false); // estado que armazena a atividade ou não do timer.\n\n  const {\n    0: finished,\n    1: setFinished\n  } = useState(false);\n  const minutes = Math.floor(time / 60); // Math.floor para arredondar o número pra baixo, 24.3 pra 24, por exemplo.\n\n  const seconds = time % 60; // resto da divisão pra ver quantos segundos faltam.\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split(''); //padStart = se a string não tiver 2 caracteres, vai adicionar um 0 no início. Split('') para criar um array separando os números por espaço.\n\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split(''); //minutos e segundso dividos entre esquerda e direita em [] = desestruturação js.\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout); // para cortar o timeout atual.\n\n    setIsActive(false);\n    setTime(25 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        // setTimeout = pra algo acontecer depois de x tempo. \n        setTime(time - 1);\n      }, 1000); // função executada depois de 1segundo.\n    } else if (isActive && time === 0) {\n      setFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]); // disparado quando o active for atualizado pelo valor armazenado em setActive e time em setTime.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonActive}` // Concatenando estilos.\n      ,\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/juajxavier/upme/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","finished","setFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\n\nlet countdownTimeout: NodeJS.Timeout; // variável global do js\n\nexport function Countdown() {\n    const [time, setTime] = useState(25 * 60); // 25 * 60 pra passar 25 minutos pra segundos.\n    const [isActive, setIsActive] = useState(false); // estado que armazena a atividade ou não do timer.\n    const [finished, setFinished] = useState(false);\n\n    const minutes = Math.floor(time/60); // Math.floor para arredondar o número pra baixo, 24.3 pra 24, por exemplo.\n    const seconds = time % 60 // resto da divisão pra ver quantos segundos faltam.\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split(''); //padStart = se a string não tiver 2 caracteres, vai adicionar um 0 no início. Split('') para criar um array separando os números por espaço.\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split(''); //minutos e segundso dividos entre esquerda e direita em [] = desestruturação js.\n\n    function startCountdown() {\n        setIsActive(true);\n    }\n\n    function resetCountdown() {\n        clearTimeout(countdownTimeout); // para cortar o timeout atual.\n        setIsActive(false);\n        setTime(25 * 60);\n\n    }\n\n    useEffect(() => {\n        if (isActive && time > 0) {\n            countdownTimeout = setTimeout(() => { // setTimeout = pra algo acontecer depois de x tempo. \n                setTime(time - 1)\n            }, 1000) // função executada depois de 1segundo.\n        } else if (isActive && time === 0) {\n            setFinished(true);\n            setIsActive(false);\n        }\n    }, [isActive, time]) // disparado quando o active for atualizado pelo valor armazenado em setActive e time em setTime.\n\n    return (\n        <div>\n            <div className={styles.countdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n\n            { isActive ? (\n                <button \n                    type=\"button\" \n                    className={`${styles.countdownButton} ${styles.countdownButtonActive}`} // Concatenando estilos.\n                    onClick={resetCountdown}\n                >\n                    Abandonar ciclo\n                </button>\n\n            ) : (\n                <button \n                    type=\"button\" \n                    className={styles.countdownButton}\n                    onClick={startCountdown}\n                >\n                    Iniciar um ciclo\n                </button>\n            ) }\n           \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}